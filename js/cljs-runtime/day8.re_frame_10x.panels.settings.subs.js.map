{"version":3,"sources":["day8/re_frame_10x/panels/settings/subs.cljs"],"mappings":"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","names":["day8.re_frame_10x.inlined_deps.re_frame.v1v3v0.re_frame.core.reg_sub","p__16475","map__16476","cljs.core/--destructure-map","cljs.core.get","settings","_","p__16480","map__16482","panel-width%","p__16489","vec__16490","cljs.core.nth","n","Math/ceil","p__16496","map__16497","window-width","p__16505","vec__16506","width","p__16511","map__16514","show-panel?","p__16520","map__16521","showing-settings?","p__16528","vec__16530","map__16533","selected-tab","p__16536","map__16537","number-of-epochs","p__16542","map__16543","ignored-events","cljs.core.sort_by","cljs.core/vals","p__16551","map__16552","filtered-view-trace","p__16558","map__16561","low-level-trace","p__16564","map__16565","debug?","p__16567","map__16568","app-db-follows-events?","p__16574","map__16575","ambiance","p__16579","map__16580","syntax-color-scheme","p__16583","map__16587","show-event-history?","p__16588","map__16589","open-new-inspectors?","p__16596","map__16597","handle-keys?","p__16603","map__16604","ready-to-bind-key","p__16610","p__16611","map__16612","vec__16613","key-bindings","k","p__16624","p__16625","map__16626","vec__16627","log-outputs","cljs.core/seq","p__16647","map__16653","log-pretty?","p__16661","map__16662","alias-namespaces?","p__16665","map__16666","ns-aliases","cljs.core.into","cljs.core.map","cljs.core.comp","cljs.core.juxt","cljs.core/val"],"sourcesContent":["(ns day8.re-frame-10x.panels.settings.subs\n  (:require\n   [day8.re-frame-10x.inlined-deps.re-frame.v1v3v0.re-frame.core :as rf]))\n\n(rf/reg-sub\n ::root\n (fn [{:keys [settings]} _]\n   settings))\n\n(rf/reg-sub\n ::panel-width%\n :<- [::root]\n (fn [{:keys [panel-width%]} _]\n   panel-width%))\n\n(rf/reg-sub\n ::panel-width%-rounded\n :<- [::panel-width%]\n  ;; Rounds panel width to nearest n%\n (fn [panel-width% [_ n]]\n    ;; https://stackoverflow.com/a/19621472\n   (/ (* (Math/ceil (/ (* panel-width% 100)\n                       n))\n         n)\n      100.0)))\n\n(rf/reg-sub\n ::window-width\n  ;; Prefer window-width-rounded if you don't need the exact number of pixels.\n :<- [::root]\n (fn [{:keys [window-width]} _]\n   window-width))\n\n(rf/reg-sub\n ::window-width-rounded\n :<- [::window-width]\n  ;; Window width, rounded up to the nearest n pixels.\n  ;; Useful when you want to respond to window size changes\n  ;; but not too many of them.\n (fn [width [_ n]]\n   (* (Math/ceil (/ width n))\n      n)))\n\n(rf/reg-sub\n ::show-panel?\n :<- [::root]\n (fn [{:keys [show-panel?]} _]\n   show-panel?))\n\n(rf/reg-sub\n ::showing-settings?\n :<- [::root]\n (fn [{:keys [showing-settings?]} _]\n   showing-settings?))\n\n(rf/reg-sub\n ::selected-tab\n :<- [::root]\n :<- [::showing-settings?]\n (fn [[{:keys [selected-tab]} showing-settings?] _]\n   (if showing-settings?\n     :settings\n     selected-tab)))\n\n(rf/reg-sub\n ::number-of-retained-epochs\n :<- [::root]\n (fn [{:keys [number-of-epochs]} _]\n   number-of-epochs))\n\n(rf/reg-sub\n ::ignored-events\n :<- [::root]\n (fn [{:keys [ignored-events]} _]\n   (sort-by :sort (vals ignored-events))))\n\n(rf/reg-sub\n ::filtered-view-trace\n :<- [::root]\n (fn [{:keys [filtered-view-trace]} _]\n   (sort-by :sort (vals filtered-view-trace))))\n\n(rf/reg-sub\n ::low-level-trace\n  ;; TODO: filter from traces panel\n  ;; TODO: eventually drop these low level traces after computing the state we need from them.\n :<- [::root]\n (fn [{:keys [low-level-trace]} _]\n   low-level-trace))\n\n(rf/reg-sub\n ::debug?\n :<- [::root]\n (fn [{:keys [debug?]} _]\n   debug?))\n\n(rf/reg-sub\n ::app-db-follows-events?\n :<- [::root]\n (fn [{:keys [app-db-follows-events?]} _]\n   app-db-follows-events?))\n\n(rf/reg-sub\n ::ambiance\n :<- [::root]\n (fn [{:keys [ambiance]} _]\n   ambiance))\n\n(rf/reg-sub\n ::syntax-color-scheme\n :<- [::root]\n (fn [{:keys [syntax-color-scheme]} _]\n   syntax-color-scheme))\n\n(rf/reg-sub\n ::show-event-history?\n :<- [::root]\n (fn [{:keys [show-event-history?]} _]\n   show-event-history?))\n\n(rf/reg-sub\n ::open-new-inspectors?\n :<- [::root]\n (fn [{:keys [open-new-inspectors?]} _]\n   open-new-inspectors?))\n\n(rf/reg-sub\n ::handle-keys?\n :<- [::root]\n (fn [{:keys [handle-keys?]} _]\n   handle-keys?))\n\n(rf/reg-sub\n ::ready-to-bind-key\n :<- [::root]\n (fn [{:keys [ready-to-bind-key]} _]\n   ready-to-bind-key))\n\n(rf/reg-sub\n ::key-bindings\n :<- [::root]\n (fn [{:keys [key-bindings]} [_ k]]\n   (if k\n     (get key-bindings k)\n     key-bindings)))\n\n(rf/reg-sub\n ::log-outputs\n :<- [::root]\n (fn [{:keys [log-outputs]} [_ k]]\n   (if k\n     (get log-outputs k)\n     log-outputs)))\n\n(rf/reg-sub\n ::any-log-outputs?\n :<- [::log-outputs]\n (fn [log-outputs _]\n   (some? (seq log-outputs))))\n\n(rf/reg-sub\n ::log-pretty?\n :<- [::root]\n (fn [{:keys [log-pretty?]} _]\n   log-pretty?))\n\n(rf/reg-sub\n ::alias-namespaces?\n :<- [::root]\n (fn [{:keys [alias-namespaces?]} _]\n   alias-namespaces?))\n\n(rf/reg-sub\n ::ns-aliases\n :<- [::root]\n (fn [{:keys [ns-aliases]} _]\n   ns-aliases))\n\n(rf/reg-sub\n ::ns->alias\n :<- [::ns-aliases]\n (fn [ns-aliases]\n   (into {}\n         (map (comp (juxt :ns-full :ns-alias) val)\n              ns-aliases))))\n\n(rf/reg-sub\n ::expansion-limit\n :<- [::root]\n :-> :expansion-limit)\n\n(rf/reg-sub\n ::trace-when\n :<- [::root]\n :-> :trace-when)\n"],"x_google_ignoreList":[0]}