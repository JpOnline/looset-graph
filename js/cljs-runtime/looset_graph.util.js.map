{"version":3,"sources":["looset_graph/util.cljs"],"mappings":";AAIA;;;;kCAAA,0CAAAA,5EAAMM;AAAN,AAAA,IAAAL,aAAAD;SAAA,AAAAE,4CAAAD,WAAA,IAAA,hEAGIM;IAHJJ,aAAA,AAAAD,4CAAAD,WAAA,IAAA;IAAAE,iBAAA,AAAAC,4BAAAD;0BAAA,AAAAE,4CAAAF,eAAA,jFAGeK;2BAHf,AAAAH,4CAAAF,eAAA,lFAGmCM;gBAHnCR,ZAG8DS;AAH9D,AAIE,+DAAA,2CAAA,yEAAA,5KAACC;AAAD,AACoB,oDAAA,7CAACC,8EAAQ,4DAAA,mFAAA,6BAAA,5KAACC,kDAAUH,yGACAI;GAFxC,wGAAA,pBAGwBN,0GACCC;;AAE3B,mCAAA,nCAAMM;AAAN,AACE,IAAMC,QAAM,gDAAA,hDAACC;AAAb,AACE,+DAAA,2CAAA,nGAACN,qLACuB,WAAKO,MAAKC,EAAEC;AAAZ,AAAkB,mBAAA,aAAA,MAAA,/BAACC,mBAAsBH,UAASC,SAASC;GADnF,qGAEiC,WAAKD;AAAL,AACE,AAACG,sBAAON,MAAMG;;AACd,WAAA,XAACI;AAAD,AACG,AACE,YAAA,ZAACF;;AACD,mCAAA,5BAACC,sBAAON;GAHb;;AAFF;GAFjC,yEAUmB;mCAAAQ,SAA0BG;AAA1B,AAAA,IAAAF,aAAAD;IAAAC,iBAAA,AAAArB,4BAAAqB;eAAA,AAAApB,4CAAAoB,eAAA,tEAAaC;AAAb,AACE,oBAAA,AAAAE,gBAAKZ;AAAL,0FAAA,iDACOU;;AADP,0FAAA,iDAEO,oDAAA,WAAAG,iBAAAC,hFAACC;AAAD,AAAc,2BAAAD,iBAAA,2CAAA,oDAAAD,pIAACG;GAAwBL;;;yBAHhDH;IAA0BG;;;;EAAAA;;oCAA1BH,SAA0BG;;;IAA1BH;IAA0BG;0BAA1BH,SAA0BG","names":["p__24760","vec__24761","cljs.core.nth","map__24764","cljs.core/--destructure-map","cljs.core.get","looset-graph.util/with-mount-fn","_n","component-did-mount","component-did-update","to-render","reagent.core.create_class","cljs.core.into","cljs.core.update_in","cljs.core/dissoc","looset-graph.util/error-boundary","error","reagent.core.atom","this","e","info","js/console.log","cljs.core/reset!","js/setTimeout","p__24770","map__24771","if-error","children","cljs.core/deref","p1__24769#","p2__24768#","cljs.core.map_indexed","cljs.core/with-meta"],"sourcesContent":["(ns looset-graph.util\n  (:require\n    [reagent.core :as reagent]))\n\n(defn with-mount-fn\n  \"Wrap component in the create-class fn so the react component-did-mount\n  hook can be used.\"\n  [[_n {:keys [component-did-mount component-did-update]} :as to-render]]\n  (reagent/create-class\n    {:reagent-render #(into [] (update-in to-render [1]\n                                          dissoc :component-did-mount))\n     :component-did-mount component-did-mount\n     :component-did-update component-did-update}))\n\n(defn error-boundary []\n  (let [error (reagent/atom nil)]\n    (reagent/create-class\n      {:component-did-catch (fn [this e info] (js/console.log \"this\" this \"e\" e \"info\" info)) ;; For side effects, like logging the error.\n       :get-derived-state-from-error (fn [e]\n                                       (reset! error e)\n                                       (js/setTimeout\n                                         #(do\n                                            (js/console.log \"Retrying to load component\")\n                                            (reset! error nil))\n                                         500)\n                                       #js {})\n       :reagent-render (fn [{:keys [if-error]} & children]\n                         (if @error\n                           [:<> if-error]\n                           [:<> (map-indexed #(with-meta %2 {:key %1}) children)]))})))\n"]}